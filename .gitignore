# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to include the following files:
#  .idea/
#  *.iml
#  *.ipr
#  *.iws
.idea/
*.iml
*.ipr
*.iws

# VS Code
.vscode/

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# DubChain specific
# Database files
*.db
*.sqlite
*.sqlite3
test.db
dubchain.db

# Log files
*.log
logs/
dubchain.log

# Configuration files with sensitive data
config.local.yaml
config.production.yaml
.env.local
.env.production

# Blockchain data
blockchain_data/
chain_data/
blocks/
transactions/

# Cache directories
cache/
.cache/
dubchain_cache/

# Temporary files
tmp/
temp/
.tmp/

# Backup files
backups/
*.backup
*.bak

# Node data
node_data/
peer_data/

# Wallet files (be careful with these)
*.wallet
wallets/
private_keys/

# Test artifacts
test_artifacts/
test_output/
test_results/
test_benchmark_results/
test_profiling_artifacts/

# Results folder (contains test outputs, benchmarks, profiling data)
results/

# Performance profiling
*.prof
*.profile
profiling/

# Memory dumps
*.dump
*.hprof

# Coverage reports
htmlcov/
.coverage
coverage.xml

# Documentation builds
docs/_build/
docs/build/

# Jupyter notebook checkpoints
.ipynb_checkpoints/

# ML model files
*.pkl
*.joblib
*.h5
*.pb
models/
checkpoints/

# Hardware acceleration artifacts
*.cubin
*.ptx
*.fatbin

# Bridge and chain data
bridge_data/
chain_data/
cross_chain_data/

# Security test results
security_reports/
penetration_reports/

# Docker
.dockerignore
docker-compose.override.yml

# Kubernetes
*.kubeconfig

# Terraform
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl

# Ansible
*.retry

# Vagrant
.vagrant/

# Virtual environments
venv/
env/
ENV/
.venv/
.env/

# IDE files
.vscode/
.idea/
*.swp
*.swo

# OS files
.DS_Store
Thumbs.db

# Local development
local/
dev/
development/

# Production files
production/
prod/

# Secrets and keys
secrets/
keys/
*.key
*.pem
*.crt
*.csr

# Generated files
generated/
auto_generated/

# Temporary fix scripts and development artifacts
scripts/fix_*.py
scripts/ultimate_*.py
scripts/final_*.py
scripts/comprehensive_import_fix.py
scripts/replace_prints_with_logging.py

# Timestamped result files
*_results_*.json
*_results_*.md
documentation_example_results_*.json
production_readiness_results_*.json
comprehensive_test_results_*.json
master_test_results_*.json
performance_results_*.json
security_results_*.json
integration_results_*.json

# Temporary development files
*.tmp
*.temp
temp_*
tmp_*

# Large generated files that cause push timeouts
performance_baselines.json
baseline_profiling_results/
comprehensive_test_results/
master_test_results/
test_results_summary/

# Build artifacts
build/
dist/
*.egg-info/

# Package files
*.tar.gz
*.zip
*.whl

# Lock files (uncomment if you want to ignore them)
# Pipfile.lock
# poetry.lock
# package-lock.json
# yarn.lock

# Node.js (if using any JS tools)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Rust (if using any Rust components)
target/
Cargo.lock

# Go (if using any Go components)
*.exe
*.exe~
*.dll
*.so
*.dylib
vendor/

# Java (if using any Java components)
*.class
*.jar
*.war
*.ear
*.zip
*.tar.gz
*.rar
hs_err_pid*

# C/C++ (if using any C/C++ components)
*.o
*.a
*.so
*.dylib
*.dll
*.exe

# Assembly
*.s
*.S

# Object files
*.o
*.obj

# Libraries
*.lib
*.a
*.la
*.lo

# Shared objects
*.so
*.so.*
*.dylib

# Executables
*.exe
*.out
*.app

# Debug files
*.dSYM/
*.su
*.idb
*.pdb

# Kernel Module Compile Results
*.mod*
*.cmd
.tmp_versions/
modules.order
Module.symvers
Mkfile.old
dkms.conf

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to include the following files:
#  .idea/
#  *.iml
#  *.ipr
#  *.iws

# VS Code
.vscode/

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
